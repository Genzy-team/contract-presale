{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "245d5672d4961ac19458edb197ec5f7cec3f0d502bf1973aa222cf078614f17f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/GENZYPreSale.sol:GENZY_PRESALE": {
        "src": "contracts/GENZYPreSale.sol:49",
        "version": {
          "withMetadata": "d18d2adda05aa2c6a62d6fab72779a992bc037bab5905bb6c542525140354178",
          "withoutMetadata": "1690f34d37517771a641a6e234972ee56653d2bb33ad5c8b488c759c19e8bedf",
          "linkedWithoutMetadata": "1690f34d37517771a641a6e234972ee56653d2bb33ad5c8b488c759c19e8bedf"
        },
        "inherit": [
          "contracts/OwnerWithdrawable.sol:OwnerWithdrawable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "execute(address,uint256)",
          "setSaleTokenParams(address,uint256)",
          "addWhiteListedToken(address,uint256)",
          "updateEthRate(uint256)",
          "updateTokenRate(address,uint256)",
          "togglePresale(bool)",
          "getTokenAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:52"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:53"
            },
            {
              "label": "saleTokenDecimals",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:54"
            },
            {
              "label": "totalTokensforSale",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:56"
            },
            {
              "label": "tokenWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:59"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:62"
            },
            {
              "label": "isPresaleStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:62"
            },
            {
              "label": "presaleData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:65"
            },
            {
              "label": "totalTokensSold",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:65"
            },
            {
              "label": "totalInvolved",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:67"
            },
            {
              "label": "hasPurchased",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/OwnerWithdrawable.sol:OwnerWithdrawable": {
        "src": "contracts/OwnerWithdrawable.sol:48",
        "version": {
          "withMetadata": "945cee1f651964308c7643af7effb6a7c6c08ecd8d4e608564d9950eb8d0c23f",
          "withoutMetadata": "1d88fc22ce6f726d5df78b8c658fabe7a9ad9f5acf8b2fc3df0d425c7c032e2c",
          "linkedWithoutMetadata": "1d88fc22ce6f726d5df78b8c658fabe7a9ad9f5acf8b2fc3df0d425c7c032e2c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "()",
          "()",
          "withdraw(address,uint256)",
          "withdrawAll(address)",
          "withdrawCurrency(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnerWithdrawable",
            "src": "contracts/OwnerWithdrawable.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "245d5672d4961ac19458edb197ec5f7cec3f0d502bf1973aa222cf078614f17f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/GENZYPreSale.sol:GENZY_PRESALE": {
        "src": "contracts/GENZYPreSale.sol:49",
        "version": {
          "withMetadata": "d18d2adda05aa2c6a62d6fab72779a992bc037bab5905bb6c542525140354178",
          "withoutMetadata": "1690f34d37517771a641a6e234972ee56653d2bb33ad5c8b488c759c19e8bedf",
          "linkedWithoutMetadata": "1690f34d37517771a641a6e234972ee56653d2bb33ad5c8b488c759c19e8bedf"
        },
        "inherit": [
          "contracts/OwnerWithdrawable.sol:OwnerWithdrawable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "execute(address,uint256)",
          "setSaleTokenParams(address,uint256)",
          "addWhiteListedToken(address,uint256)",
          "updateEthRate(uint256)",
          "updateTokenRate(address,uint256)",
          "togglePresale(bool)",
          "getTokenAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:52"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:53"
            },
            {
              "label": "saleTokenDecimals",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:54"
            },
            {
              "label": "totalTokensforSale",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:56"
            },
            {
              "label": "tokenWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:59"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:62"
            },
            {
              "label": "isPresaleStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:62"
            },
            {
              "label": "presaleData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:65"
            },
            {
              "label": "totalTokensSold",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:65"
            },
            {
              "label": "totalInvolved",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:67"
            },
            {
              "label": "hasPurchased",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/OwnerWithdrawable.sol:OwnerWithdrawable": {
        "src": "contracts/OwnerWithdrawable.sol:48",
        "version": {
          "withMetadata": "945cee1f651964308c7643af7effb6a7c6c08ecd8d4e608564d9950eb8d0c23f",
          "withoutMetadata": "1d88fc22ce6f726d5df78b8c658fabe7a9ad9f5acf8b2fc3df0d425c7c032e2c",
          "linkedWithoutMetadata": "1d88fc22ce6f726d5df78b8c658fabe7a9ad9f5acf8b2fc3df0d425c7c032e2c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "()",
          "()",
          "withdraw(address,uint256)",
          "withdrawAll(address)",
          "withdrawCurrency(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnerWithdrawable",
            "src": "contracts/OwnerWithdrawable.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "245d5672d4961ac19458edb197ec5f7cec3f0d502bf1973aa222cf078614f17f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/GENZYPreSale.sol:GENZY_PRESALE": {
        "src": "contracts/GENZYPreSale.sol:49",
        "version": {
          "withMetadata": "8eb3db49ad8c77d46c3854b44c4bc8820da7455e139e7b2982d3a1cb71d3fa4d",
          "withoutMetadata": "1690f34d37517771a641a6e234972ee56653d2bb33ad5c8b488c759c19e8bedf",
          "linkedWithoutMetadata": "1690f34d37517771a641a6e234972ee56653d2bb33ad5c8b488c759c19e8bedf"
        },
        "inherit": [
          "contracts/OwnerWithdrawable.sol:OwnerWithdrawable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "execute(address,uint256)",
          "setSaleTokenParams(address,uint256)",
          "addWhiteListedToken(address,uint256)",
          "updateEthRate(uint256)",
          "updateTokenRate(address,uint256)",
          "togglePresale(bool)",
          "getTokenAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:52"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:53"
            },
            {
              "label": "saleTokenDecimals",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:54"
            },
            {
              "label": "totalTokensforSale",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:56"
            },
            {
              "label": "tokenWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:59"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:62"
            },
            {
              "label": "isPresaleStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:62"
            },
            {
              "label": "presaleData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:65"
            },
            {
              "label": "totalTokensSold",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:65"
            },
            {
              "label": "totalInvolved",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:67"
            },
            {
              "label": "hasPurchased",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/OwnerWithdrawable.sol:OwnerWithdrawable": {
        "src": "contracts/OwnerWithdrawable.sol:48",
        "version": {
          "withMetadata": "945cee1f651964308c7643af7effb6a7c6c08ecd8d4e608564d9950eb8d0c23f",
          "withoutMetadata": "1d88fc22ce6f726d5df78b8c658fabe7a9ad9f5acf8b2fc3df0d425c7c032e2c",
          "linkedWithoutMetadata": "1d88fc22ce6f726d5df78b8c658fabe7a9ad9f5acf8b2fc3df0d425c7c032e2c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "()",
          "()",
          "withdraw(address,uint256)",
          "withdrawAll(address)",
          "withdrawCurrency(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnerWithdrawable",
            "src": "contracts/OwnerWithdrawable.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "245d5672d4961ac19458edb197ec5f7cec3f0d502bf1973aa222cf078614f17f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/GENZYPreSale.sol:GENZY_PRESALE": {
        "src": "contracts/GENZYPreSale.sol:48",
        "version": {
          "withMetadata": "492fe21ecf4671822524d09ea6f57fad0fde995fd9eeb3d615c5660cb909a7f1",
          "withoutMetadata": "a0e9ffdce3b787287648ea44926e5fa9412458cf716a0a1339e59cefae969aad",
          "linkedWithoutMetadata": "a0e9ffdce3b787287648ea44926e5fa9412458cf716a0a1339e59cefae969aad"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "execute(address,uint256)",
          "setSaleTokenParams(address,uint256)",
          "addWhiteListedToken(address,uint256)",
          "updateEthRate(uint256)",
          "updateTokenRate(address,uint256)",
          "togglePresale(bool)",
          "getTokenAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GENZY_PRESALE",
            "src": "contracts/GENZYPreSale.sol:69"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:53"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:54"
            },
            {
              "label": "saleTokenDecimals",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:54"
            },
            {
              "label": "totalTokensforSale",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:55"
            },
            {
              "label": "tokenWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:60"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:61"
            },
            {
              "label": "isPresaleStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:63"
            },
            {
              "label": "presaleData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:65"
            },
            {
              "label": "totalTokensSold",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:66"
            },
            {
              "label": "totalInvolved",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:68"
            },
            {
              "label": "hasPurchased",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:69"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/OwnerWithdrawable.sol:OwnerWithdrawable": {
        "src": "contracts/OwnerWithdrawable.sol:48",
        "version": {
          "withMetadata": "945cee1f651964308c7643af7effb6a7c6c08ecd8d4e608564d9950eb8d0c23f",
          "withoutMetadata": "1d88fc22ce6f726d5df78b8c658fabe7a9ad9f5acf8b2fc3df0d425c7c032e2c",
          "linkedWithoutMetadata": "1d88fc22ce6f726d5df78b8c658fabe7a9ad9f5acf8b2fc3df0d425c7c032e2c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "()",
          "()",
          "withdraw(address,uint256)",
          "withdrawAll(address)",
          "withdrawCurrency(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnerWithdrawable",
            "src": "contracts/OwnerWithdrawable.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "17deaf5897dae52664e21522f225c8a1b46fc271aaeb4c336fad511ad5719896",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "cffe2d76e2b2cba42257535ad49ee5fd9833cc28323b7a722c000471e6a0a08c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "053023a5508589fd46726720ed5ca49099da9c1b9bfbbe1e6027a4c275af6370",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/GENZYPreSale.sol:GENZY_PRESALE": {
        "src": "contracts/GENZYPreSale.sol:50",
        "version": {
          "withMetadata": "b43832c764c8da2130636afca1d4a9053559726e2a02f88a21f816525d3584fe",
          "withoutMetadata": "af5819c9a1f00321f974558957f495cb32cae198edf7bd0175cf2ad1f023e816",
          "linkedWithoutMetadata": "af5819c9a1f00321f974558957f495cb32cae198edf7bd0175cf2ad1f023e816"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "execute(address,uint256)",
          "setSaleTokenParams(address,uint256)",
          "addWhiteListedToken(address,uint256)",
          "updateEthRate(uint256)",
          "updateTokenRate(address,uint256)",
          "togglePresale(bool)",
          "getTokenAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GENZY_PRESALE",
            "src": "contracts/GENZYPreSale.sol:71"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:55"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:56"
            },
            {
              "label": "saleTokenDecimals",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:57"
            },
            {
              "label": "totalTokensforSale",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:57"
            },
            {
              "label": "tokenWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:62"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:63"
            },
            {
              "label": "isPresaleStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:65"
            },
            {
              "label": "presaleData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:68"
            },
            {
              "label": "totalTokensSold",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:68"
            },
            {
              "label": "totalInvolved",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:70"
            },
            {
              "label": "hasPurchased",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/GENZYPreSale.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      },
      "contracts/OwnerWithdrawable.sol:GENZY_PRESALE": {
        "src": "contracts/OwnerWithdrawable.sol:50",
        "version": {
          "withMetadata": "7c603966a58bc5fb575df41c3aa4b8458c56a0f5d2a338d924981af42b35d0ec",
          "withoutMetadata": "af5819c9a1f00321f974558957f495cb32cae198edf7bd0175cf2ad1f023e816",
          "linkedWithoutMetadata": "af5819c9a1f00321f974558957f495cb32cae198edf7bd0175cf2ad1f023e816"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeMath.sol:SafeMath",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "()",
          "execute(address,uint256)",
          "setSaleTokenParams(address,uint256)",
          "addWhiteListedToken(address,uint256)",
          "updateEthRate(uint256)",
          "updateTokenRate(address,uint256)",
          "togglePresale(bool)",
          "getTokenAmount(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GENZY_PRESALE",
            "src": "contracts/OwnerWithdrawable.sol:71"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/OwnerWithdrawable.sol:55"
            },
            {
              "label": "saleToken",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "GENZY_PRESALE",
              "src": "contracts/OwnerWithdrawable.sol:56"
            },
            {
              "label": "saleTokenDecimals",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/OwnerWithdrawable.sol:57"
            },
            {
              "label": "totalTokensforSale",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/OwnerWithdrawable.sol:57"
            },
            {
              "label": "tokenWhitelist",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/OwnerWithdrawable.sol:62"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/OwnerWithdrawable.sol:63"
            },
            {
              "label": "isPresaleStarted",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "GENZY_PRESALE",
              "src": "contracts/OwnerWithdrawable.sol:65"
            },
            {
              "label": "presaleData",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/OwnerWithdrawable.sol:68"
            },
            {
              "label": "totalTokensSold",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/OwnerWithdrawable.sol:68"
            },
            {
              "label": "totalInvolved",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "GENZY_PRESALE",
              "src": "contracts/OwnerWithdrawable.sol:70"
            },
            {
              "label": "hasPurchased",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GENZY_PRESALE",
              "src": "contracts/OwnerWithdrawable.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.26"
      }
    }
  ]
}